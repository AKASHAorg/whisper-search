{"version":3,"sources":["../../../test/unit/whisper-search.js"],"names":["sIndex","describe","beforeEach","spy","greet","it","expect","to","have","been","calledOnce","always","returned","done","err","index","be","defined","search","query","AND","entryId","on","doc","console","log","document"],"mappings":";;AAAA;;;;AACA;;;;AAEA,IAAIA,eAAJ;AACAC,SAAS,eAAT,EAA0B,YAAM;AAC9BA,WAAS,gBAAT,EAA2B,YAAM;AAC/BC,eAAW,YAAM;AACfC,mCAAmB,OAAnB;AACA,8BAAcC,KAAd;AACD,KAHD;;AAKAC,OAAG,2BAAH,EAAgC,YAAM;AACpCC,aAAO,wBAAcF,KAArB,EAA4BG,EAA5B,CAA+BC,IAA/B,CAAoCC,IAApC,CAAyCC,UAAzC;AACD,KAFD;;AAIAL,OAAG,mCAAH,EAAwC,YAAM;AAC5CC,aAAO,wBAAcF,KAArB,EAA4BG,EAA5B,CAA+BC,IAA/B,CAAoCG,MAApC,CAA2CC,QAA3C,CAAoD,OAApD;AACD,KAFD;;AAIAP,OAAG,6BAAH,EAAkC,UAACQ,IAAD,EAAU;;AAE1C,gCAAS,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACvBf,iBAASe,KAAT;AACAT,eAAOS,KAAP,EAAcR,EAAd,CAAiBS,EAAjB,CAAoBC,OAApB;AACAJ;AACD,OAJD;AAKD,KAPD;;AASAR,OAAG,yBAAH,EAA8B,UAACQ,IAAD,EAAU;AACtCb,aAAOkB,MAAP,CAAc,EAAEC,OAAO,EAAEC,KAAK,EAAEC,SAAS,CAAC,KAAD,CAAX,EAAP,EAAT,EAAd,EAAwDC,EAAxD,CAA2D,MAA3D,EAAmE,UAAUC,GAAV,EAAe;AAChFC,gBAAQC,GAAR,CAAYF,GAAZ;AACAjB,eAAOiB,IAAIG,QAAX,EAAqBnB,EAArB,CAAwBS,EAAxB,CAA2BC,OAA3B;AACD,OAHD,EAGGK,EAHH,CAGM,KAHN,EAGa,YAAY;AACvBE,gBAAQC,GAAR,CAAY,QAAZ;AACAZ;AACD,OAND;AAOD,KARD;AASD,GAhCD;AAiCD,CAlCD","file":"whisper-search.js","sourcesContent":["import whisperSearch from '../../src/whisper-search';\nimport { getIndex } from '../../src/indexModel';\n\nlet sIndex;\ndescribe('whisperSearch', () => {\n  describe('Greet function', () => {\n    beforeEach(() => {\n      spy(whisperSearch, 'greet');\n      whisperSearch.greet();\n    });\n\n    it('should have been run once', () => {\n      expect(whisperSearch.greet).to.have.been.calledOnce;\n    });\n\n    it('should have always returned hello', () => {\n      expect(whisperSearch.greet).to.have.always.returned('hello');\n    });\n\n    it('should pipe object to index', (done) => {\n\n      getIndex((err, index) => {\n        sIndex = index;\n        expect(index).to.be.defined;\n        done();\n      });\n    });\n\n    it('should run search query', (done) => {\n      sIndex.search({ query: { AND: { entryId: ['711'] } } }).on('data', function (doc) {\n        console.log(doc);\n        expect(doc.document).to.be.defined;\n      }).on('end', function () {\n        console.log('found?');\n        done();\n      });\n    });\n  });\n});\n"]}
{"version":3,"sources":["../../src/search.js"],"names":["runService","lvlDb","installFilter","web3","filter","shh","topics","to","watch","err","message","payload","toUtf8","jsonPayload","JSON","parse","console","log","text","response","Set","pageSize","offset","totalHits","query","AND","count","search","on","data","document","entryId","add","results","stringify","entries","Array","from","hexResult","fromUtf8","post","identity","ttl","fromDecimal","error","sent","resp","newIdentity","address"],"mappings":"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","file":"search.js","sourcesContent":["import { getWeb3, getIdentity, setIdentity, SEARCH_REQUEST } from './services';\nimport { getIndex } from './indexModel';\n// NOT HERE\nlet lvlDb;\nconst installFilter = (web3, lvlDb) => {\n  const filter = web3.shh.filter({ topics: [SEARCH_REQUEST], to: getIdentity() });\n  filter.watch((err, message) => {\n    const payload = web3.toUtf8(message.payload);\n    let jsonPayload;\n    try {\n      jsonPayload = JSON.parse(payload);\n    } catch (err) {\n      console.log(err);\n    }\n    if (!jsonPayload || !jsonPayload.text) {\n      return;\n    }\n    let response = new Set();\n    const pageSize = (jsonPayload.pageSize) ? jsonPayload.pageSize : 20;\n    const offset = (jsonPayload.offset) ? jsonPayload.offset: 0;\n\n    lvlDb.totalHits({ query: [{ AND: { '*': [jsonPayload.text] } }] }, function (err, count) {\n      lvlDb.search({ query: [{ AND: { '*': [jsonPayload.text] } }], pageSize: pageSize, offset: offset })\n        .on('data', (data) => {\n          console.log(data);\n          console.log('pipe data ', data.document.entryId);\n          response.add(data.document.entryId);\n        }).on('end', () => {\n        const results = JSON.stringify({ count: count, entries: Array.from(response) });\n        const hexResult = web3.fromUtf8(results);\n        web3.shh\n          .post({\n            from: identity,\n            to: message.from,\n            topics: [message.payload],\n            payload: hexResult,\n            ttl: web3.fromDecimal(10)\n          }, (error, sent) => {\n            if (sent) {\n              console.log('search fs asdasdsadas done for keyword', payload, ' with results ', results);\n            } else {\n              console.error('search error for keyword', payload, error);\n            }\n          });\n        //\n      });\n    });\n  });\n  return null;\n};\n\nexport default function runService () {\n  const web3 = getWeb3();\n\n  if (getIdentity()) {\n    getIndex((err, resp) => {\n      console.log('err', err, 'resp', resp);\n      lvlDb = resp;\n      installFilter(web3, resp);\n    });\n    return;\n  }\n\n  web3.shh.newIdentity((err, address) => {\n    console.log('SERVICE IDENTITY ', address);\n    setIdentity(address);\n    return installFilter(web3);\n  });\n}\n"]}
{"version":3,"sources":["../../src/services.js"],"names":["services","web3","ipfs","whisperIdentity","getWeb3","getIpfs","token","Buffer","from","Date","toDateString","segment","__dirname","file","toString","setIdentity","newIdentity","getIdentity","HANDSHAKE_REQUEST","HANDSHAKE_RESPONSE","SEARCH_REQUEST","BLOCK_INTERVAL"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AAEO,IAAMA,8BAAW;AACtBC,QAAM,IADgB;AAEtBC,QAAM,IAFgB;AAGtBC,mBAAiB;AAHK,CAAjB;;AAMA,IAAMC,4BAAU,SAAVA,OAAU,GAAM;AAC3B,MAAI,CAACJ,SAASC,IAAd,EAAoB;AAClBD,aAASC,IAAT,GAAgB,kCAAhB;AACD;AACD,SAAOD,SAASC,IAAhB;AACD,CALM;;AAOA,IAAMI,4BAAU,SAAVA,OAAU,GAAM;AAC3B,MAAI,CAACL,SAASE,IAAd,EAAoB;AAClBF,aAASE,IAAT,GAAgB,kCAAhB;AACD;AACD,SAAOF,SAASE,IAAhB;AACD,CALM;;AAOP,IAAMI,QAAQC,OAAOC,IAAP,CAAa,IAAIC,IAAJ,EAAD,CAAaC,YAAb,EAAZ,CAAd;AACA,IAAMC,UAAU,gBAAKC,SAAL,EAAgB,YAAhB,CAAhB;AACA,IAAMC,OAAO,gBAAKF,OAAL,EAAcL,MAAMQ,QAAN,CAAe,KAAf,IAAwB,gBAAtC,CAAb;;AAEO,IAAMC,oCAAc,SAAdA,WAAc,CAACC,WAAD,EAAiB;AAC1C,SAAO,uBAAcH,IAAd,EAAoBG,WAApB,CAAP;AACD,CAFM;;AAIA,IAAMC,oCAAc,SAAdA,WAAc,GAAM;AAC/B,MAAI,CAACjB,SAASG,eAAd,EAA+B;AAC7BH,aAASG,eAAT,GAA2B,sBAAaU,IAAb,EAAmB,MAAnB,CAA3B;AACD;AACD,SAAOb,SAASG,eAAhB;AACD,CALM;AAMA,IAAMe,gDAAoB,oCAA1B;AACA,IAAMC,kDAAqB,sCAA3B;;AAEA,IAAMC,0CAAiB,gCAAvB;;AAEA,IAAMC,0CAAiB,GAAvB","file":"services.js","sourcesContent":["import web3 from './web3-api-connection';\nimport ipfs from './ipfs-api-connection';\nimport { writeFileSync, readFileSync } from 'fs';\nimport { join } from 'path';\n\nexport const services = {\n  web3: null,\n  ipfs: null,\n  whisperIdentity: null\n};\n\nexport const getWeb3 = () => {\n  if (!services.web3) {\n    services.web3 = web3();\n  }\n  return services.web3;\n};\n\nexport const getIpfs = () => {\n  if (!services.ipfs) {\n    services.ipfs = ipfs();\n  }\n  return services.ipfs;\n};\n\nconst token = Buffer.from((new Date()).toDateString());\nconst segment = join(__dirname, 'identities');\nconst file = join(segment, token.toString('hex') + '_identity.json');\n\nexport const setIdentity = (newIdentity) => {\n  return writeFileSync(file, newIdentity);\n};\n\nexport const getIdentity = () => {\n  if (!services.whisperIdentity) {\n    services.whisperIdentity = readFileSync(file, 'utf8');\n  }\n  return services.whisperIdentity;\n};\nexport const HANDSHAKE_REQUEST = '0x68616e647368616b6552657175657374';\nexport const HANDSHAKE_RESPONSE = '0x68616e647368616b65526573706f6e7365';\n\nexport const SEARCH_REQUEST = '0x5345415243485f52455155455354';\n\nexport const BLOCK_INTERVAL = 100;\n"]}
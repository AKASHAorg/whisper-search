{"version":3,"sources":["../../src/construct-index.js"],"names":["TransportIndex","opt","web3","factory","Class","indexS","_index","pool","Set","idList","blockNumber","daemonBlock","err","resp","eth","getBlockNumber","nr","pull","ipfsHashChunks","toUtf8","blockNr","filter","fromBlock","toBlock","Array","from","clear","emit","objects","entries","Publish","get","data","i","length","add","args","entryId","toString","hash","response","title","body","getInstance","api","then","findLinks","multihash","final","catch","console","log","push","getEntry","call","e","d","entryIpfs","resource","getHash","fetchIpfs","ipfsData","found","search","query","AND","on","score","watcher","watch","published","newIndex","objectMode","shh","topics","to","message","payload","jsonPayload","JSON","parse","text","totalHits","count","pageSize","offset","document","results","stringify","size","hexResult","fromUtf8","post","ttl","fromDecimal","error","sent"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;IACqBA,c;;;AAEnB,0BAAaC,GAAb,EAAkB;AAAA;;AAAA,gIACVA,GADU;;AAEhB,UAAKC,IAAL,GAAY,wBAAZ;AACA,UAAKC,OAAL,GAAe,IAAI,oBAAUC,KAAd,CAAoB,MAAKF,IAAzB,CAAf;AACA,UAAKG,MAAL,GAAc,EAAd;AACA,UAAKC,MAAL,GAAc,CAAd;AACA,UAAKC,IAAL,GAAY,IAAIC,GAAJ,EAAZ;AACA,UAAKC,MAAL,GAAc,EAAd;AACA,UAAKC,WAAL,GAAmB,EAAnB;AACA,UAAKC,WAAL,GAAmB,EAAnB;;AAEA,8BAAS,UAACC,GAAD,EAAMC,IAAN,EAAe;AACtB,YAAKR,MAAL,GAAcQ,IAAd;AACD,KAFD;;AAIA,UAAKX,IAAL,CAAUY,GAAV,CAAcC,cAAd,CAA6B,UAACH,GAAD,EAAMI,EAAN,EAAa;AACxC,YAAKN,WAAL,GAAmBM,EAAnB;AACA,YAAKL,WAAL,GAAmBK,EAAnB;AACA,YAAKC,IAAL;AACD,KAJD;AAfgB;AAoBjB;;;;4BAEQC,c,EAAgB;AACvB,aAAO,KAAKhB,IAAL,CAAUiB,MAAV,CAAiBD,eAAe,CAAf,CAAjB,IACL,KAAKhB,IAAL,CAAUiB,MAAV,CAAiBD,eAAe,CAAf,CAAjB,CADF;AAED;;;2BAEO;AAAA;;AACN,UAAME,UAAW,KAAKV,WAAL,2BAAD,GAAuC,KAAKA,WAAL,2BAAvC,GAA4E,CAA5F;AACA,UAAMW,SAAS,EAAEC,WAAWF,OAAb,EAAsBG,SAAS,KAAKb,WAApC,EAAf;AACA,UAAI,KAAKA,WAAL,KAAqB,CAAzB,EAA4B;AAC1B,aAAKD,MAAL,GAAce,MAAMC,IAAN,CAAW,KAAKlB,IAAhB,CAAd;AACA,aAAKA,IAAL,CAAUmB,KAAV;AACA,eAAO,KAAKC,IAAL,CAAU,UAAV,EAAsB,IAAtB,CAAP;AACD;;AAED,WAAKxB,OAAL,CAAayB,OAAb,CAAqBC,OAArB,CAA6BC,OAA7B,CAAqC,EAArC,EAAyCT,MAAzC,EAAiDU,GAAjD,CAAqD,UAACnB,GAAD,EAAMoB,IAAN,EAAe;AAClE,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAID,KAAKE,MAAzB,EAAiCD,GAAjC,EAAsC;AACpC,iBAAK1B,IAAL,CAAU4B,GAAV,CAAeH,KAAKC,CAAL,EAAQG,IAAR,CAAaC,OAAd,CAAuBC,QAAvB,EAAd;AACD;AACD,eAAKrB,IAAL;AACD,OALD;AAMA,WAAKP,WAAL,GAAmBU,OAAnB;AACD;;;8BAEUmB,I,EAAMF,O,EAAS;AACxB,UAAIG,WAAW,EAAEC,OAAO,EAAT,EAAaC,MAAM,EAAnB,EAAuBL,SAASA,OAAhC,EAAf;AACA,aAAO,6BAAcM,WAAd,GAA4BC,GAA5B,CAAgCb,GAAhC,CAAoCQ,IAApC,EACJM,IADI,CACC,UAAChC,IAAD,EAAU;AACd2B,iBAASC,KAAT,GAAiB5B,KAAK4B,KAAtB;AACA,eAAO,6BAAcE,WAAd,GAA4BC,GAA5B,CAAgCE,SAAhC,CAA0CP,IAA1C,EAAgD,CAAC,SAAD,CAAhD,CAAP;AACD,OAJI,EAKJM,IALI,CAKC,UAAChC,IAAD,EAAU;AACd,YAAIA,KAAKqB,MAAT,EAAiB;AACf,iBAAO,6BAAcS,WAAd,GAA4BC,GAA5B,CAAgCb,GAAhC,CAAoClB,KAAK,CAAL,EAAQkC,SAA5C,CAAP;AACD;AACF,OATI,EAUJF,IAVI,CAUC,UAACG,KAAD,EAAW;AACfR,iBAASE,IAAT,GAAgBM,KAAhB;AACA,eAAOR,QAAP;AACD,OAbI,EAcJS,KAdI,CAcE,UAACrC,GAAD,EAAS;AACdsC,gBAAQC,GAAR,CAAY,QAAZ,EAAsB,EAAEZ,UAAF,EAAQF,gBAAR,EAAtB,EAAyCzB,GAAzC;AACD,OAhBI,CAAP;AAiBD;;;4BAGQ;AAAA;;AACP,UAAI,KAAKN,MAAL,KAAgB,KAAKG,MAAL,CAAYyB,MAAhC,EAAwC;AACtC,aAAKkB,IAAL,CAAU,IAAV;AACD,OAFD,MAGK;AACH,aAAKjD,OAAL,CAAayB,OAAb,CAAqBC,OAArB,CAA6BwB,QAA7B,CAAsCC,IAAtC,CAA2C,KAAK7C,MAAL,CAAY,KAAKH,MAAjB,CAA3C,EAAqE,UAACiD,CAAD,EAAIC,CAAJ,EAAU;AAC7E,cAAMC,YAAYD,EAAE,CAAF,CAAlB;AACA,cAAME,WAAW,OAAKC,OAAL,CAAaF,SAAb,CAAjB;AACA,iBAAO,OAAKG,SAAL,CAAeF,QAAf,EAAyB,OAAKjD,MAAL,CAAY,OAAKH,MAAL,EAAZ,CAAzB,EAAqDuC,IAArD,CAA0D,UAACgB,QAAD,EAAc;AAC7E,gBAAIA,QAAJ,EAAc;AAAA;AACZ,oBAAIC,QAAQ,KAAZ;AACA,uBAAKzD,MAAL,CAAY0D,MAAZ,CAAmB,EAAEC,OAAO,EAAEC,KAAK,EAAExB,OAAO,CAACoB,SAASpB,KAAV,CAAT,EAAP,EAAT,EAAnB,EACGyB,EADH,CACM,MADN,EACc,UAAClC,IAAD,EAAU;AACpB,sBAAIA,KAAKmC,KAAL,GAAa,CAAjB,EAAoB;AAClBL,4BAAQ,IAAR;AACD;AACF,iBALH,EAKKI,EALL,CAKQ,KALR,EAKe,YAAM;AACnB,sBAAI,CAACJ,KAAL,EAAY;AACVZ,4BAAQC,GAAR,CAAY,SAAZ,EAAuBU,QAAvB;AACA,2BAAO,OAAKT,IAAL,CAAUS,QAAV,CAAP;AACD;AACD,yBAAO,OAAKT,IAAL,CAAU,EAAV,CAAP;AACD,iBAXD;AAYA;AAAA,qBAAO;AAAP;AAdY;;AAAA;AAeb;AACD,mBAAO,OAAKA,IAAL,CAAU,EAAV,CAAP;AACD,WAlBM,CAAP;AAmBD,SAtBD;AAuBD;AACF;;;2BAEO;AAAA;;AACN,WAAKc,EAAL,CAAQ,UAAR,EAAoB,YAAM;AACxB,yCAAc,OAAK7D,MAAnB;AACD,OAFD;AAGD;;;gCAEY;AAAA;;AACX6C,cAAQC,GAAR,CAAY,iBAAZ,EAA+B,KAAKxC,WAApC;AACA,UAAMyD,UAAU,KAAKjE,OAAL,CAAayB,OAAb,CAAqBC,OAArB,CAA6BC,OAA7B,CAAqC,EAArC,EAAyC,EAAER,WAAW,KAAKX,WAAlB,EAA+BY,SAAS,QAAxC,EAAzC,CAAhB;AACA6C,cAAQC,KAAR,CAAc,UAACzD,GAAD,EAAM0D,SAAN,EAAoB;AAChC,eAAKnE,OAAL,CAAayB,OAAb,CAAqBC,OAArB,CAA6BwB,QAA7B,CAAsCC,IAAtC,CAA4CgB,UAAUlC,IAAV,CAAeC,OAAhB,CAAyBC,QAAzB,EAA3C,EAAgF,UAACiB,CAAD,EAAIC,CAAJ,EAAU;AACxFN,kBAAQC,GAAR,CAAY,kBAAZ,EAAiCmB,UAAUlC,IAAV,CAAeC,OAAhB,CAAyBC,QAAzB,EAAhC;AACA,cAAMmB,YAAYD,EAAE,CAAF,CAAlB;AACA,cAAME,WAAW,OAAKC,OAAL,CAAaF,SAAb,CAAjB;AACA,iBAAO,OAAKG,SAAL,CAAeF,QAAf,EAA0BY,UAAUlC,IAAV,CAAeC,OAAhB,CAAyBC,QAAzB,EAAzB,EAA8DO,IAA9D,CAAmE,UAACgB,QAAD,EAAc;AACtF,gBAAIA,QAAJ,EAAc;AAAA;AACZ,oBAAIC,QAAQ,KAAZ;AACA,uBAAKzD,MAAL,CAAY0D,MAAZ,CAAmB,EAAEC,OAAO,EAAEC,KAAK,EAAExB,OAAO,CAACoB,SAASpB,KAAV,CAAT,EAA2BC,MAAM,CAACmB,SAASnB,IAAV,CAAjC,EAAP,EAAT,EAAnB,EACGwB,EADH,CACM,MADN,EACc,UAAClC,IAAD,EAAU;AACpB,sBAAIA,KAAKmC,KAAL,GAAa,CAAjB,EAAoB;AAClBL,4BAAQ,IAAR;AACD;AACF,iBALH,EAKKI,EALL,CAKQ,KALR,EAKe,YAAM;AACnB,sBAAI,CAACJ,KAAL,EAAY;AACV,wBAAMS,WAAW,qBAAa,EAAEC,YAAY,IAAd,EAAb,CAAjB;AACAD,6BAASnB,IAAT,CAAcS,QAAd;AACAU,6BAASnB,IAAT,CAAc,IAAd;AACA,6CAAQmB,QAAR,EAAkB,OAAKlE,MAAvB;AACD;AACF,iBAZD;AAFY;AAeb;AACF,WAjBM,CAAP;AAkBD,SAtBD;AAuBD,OAxBD;AAyBD;;;mCAEe;AAAA;;AACd6C,cAAQC,GAAR,CAAY,yBAAZ;AACA,UAAM9B,SAAS,KAAKnB,IAAL,CAAUuE,GAAV,CAAcpD,MAAd,CAAqB,EAAEqD,QAAQ,0BAAV,EAA4BC,IAAI,4BAAhC,EAArB,CAAf;AACAtD,aAAOgD,KAAP,CAAa,UAACzD,GAAD,EAAMgE,OAAN,EAAkB;AAC7B,YAAMC,UAAU,OAAK3E,IAAL,CAAUiB,MAAV,CAAiByD,QAAQC,OAAzB,CAAhB;AACA,YAAIC,oBAAJ;AACA,YAAI;AACFA,wBAAcC,KAAKC,KAAL,CAAWH,OAAX,CAAd;AACD,SAFD,CAEE,OAAOjE,GAAP,EAAY;AACZsC,kBAAQC,GAAR,CAAYvC,GAAZ;AACD;AACD,YAAI,CAACkE,WAAD,IAAgB,CAACA,YAAYG,IAAjC,EAAuC;AACrC;AACD;AACD,YAAIzC,WAAW,IAAIhC,GAAJ,EAAf;AACA,eAAKH,MAAL,CAAY6E,SAAZ,CAAsB,EAAElB,OAAO,CAAC,EAAEC,KAAK,EAAE,KAAK,CAACa,YAAYG,IAAb,CAAP,EAAP,EAAD,CAAT,EAAtB,EAAyE,UAACrE,GAAD,EAAMuE,KAAN,EAAgB;AACvF,cAAMC,WAAYD,QAAQ,GAAT,GAAgB,GAAhB,GAAqBA,KAAtC;AACA,cAAME,SAAUP,YAAYO,MAAb,GAAuBP,YAAYO,MAAnC,GAA4C,CAA3D;AACA,iBAAKhF,MAAL,CAAY0D,MAAZ,CAAmB;AACjBC,mBAAO,CAAC,EAAEC,KAAK,EAAE,KAAK,CAACa,YAAYG,IAAb,CAAP,EAAP,EAAD,CADU;AAEjBG,sBAAUA,QAFO;AAGjBC,oBAAQA;AAHS,WAAnB,EAKGnB,EALH,CAKM,MALN,EAKc,UAAClC,IAAD,EAAU;AACpBQ,qBAASL,GAAT,CAAaH,KAAKsD,QAAL,CAAcjD,OAA3B;AACD,WAPH,EAOK6B,EAPL,CAOQ,KAPR,EAOe,YAAM;AACnB,gBAAMqB,UAAUR,KAAKS,SAAL,CAAe,EAAEL,OAAO3C,SAASiD,IAAlB,EAAwB5D,SAASL,MAAMC,IAAN,CAAWe,QAAX,CAAjC,EAAf,CAAhB;AACA,gBAAMkD,YAAY,OAAKxF,IAAL,CAAUyF,QAAV,CAAmBJ,OAAnB,CAAlB;AACA,mBAAKrF,IAAL,CAAUuE,GAAV,CACGmB,IADH,CACQ;AACJnE,oBAAM,4BADF;AAEJkD,kBAAIC,QAAQnD,IAFR;AAGJiD,sBAAQ,CAACE,QAAQC,OAAT,CAHJ;AAIJA,uBAASa,SAJL;AAKJG,mBAAK,OAAK3F,IAAL,CAAU4F,WAAV,CAAsB,EAAtB;AALD,aADR,EAOK,UAACC,KAAD,EAAQC,IAAR,EAAiB;AAClB,kBAAIA,IAAJ,EAAU;AACR9C,wBAAQC,GAAR,CAAY,yBAAZ,EAAuC0B,OAAvC,EAAgD,gBAAhD,EAAkEO,QAAlE;AACD,eAFD,MAEO;AACLlC,wBAAQ6C,KAAR,CAAc,0BAAd,EAA0ClB,OAA1C,EAAmDkB,KAAnD;AACD;AACF,aAbH;AAcA;AACD,WAzBD;AA0BD,SA7BD;AA8BD,OA1CD;AA2CA,aAAO,IAAP;AACD;;;;;;kBAvLkB/F,c","file":"construct-index.js","sourcesContent":["import contracts from '@akashaproject/contracts.js';\nimport { getIndex, consume } from './indexModel';\nimport { getWeb3, BLOCK_INTERVAL, SEARCH_REQUEST, getIdentity } from './services';\nimport { IpfsConnector } from '@akashaproject/ipfs-connector';\nimport { Readable } from 'stream';\nexport default class TransportIndex extends Readable {\n\n  constructor (opt) {\n    super(opt);\n    this.web3 = getWeb3();\n    this.factory = new contracts.Class(this.web3);\n    this.indexS = '';\n    this._index = 0;\n    this.pool = new Set();\n    this.idList = '';\n    this.blockNumber = '';\n    this.daemonBlock = '';\n\n    getIndex((err, resp) => {\n      this.indexS = resp;\n    });\n\n    this.web3.eth.getBlockNumber((err, nr) => {\n      this.blockNumber = nr;\n      this.daemonBlock = nr;\n      this.pull();\n    });\n  }\n\n  getHash (ipfsHashChunks) {\n    return this.web3.toUtf8(ipfsHashChunks[0]) +\n      this.web3.toUtf8(ipfsHashChunks[1]);\n  }\n\n  pull () {\n    const blockNr = (this.blockNumber > BLOCK_INTERVAL) ? (this.blockNumber - BLOCK_INTERVAL) : 0;\n    const filter = { fromBlock: blockNr, toBlock: this.blockNumber };\n    if (this.blockNumber === 0) {\n      this.idList = Array.from(this.pool);\n      this.pool.clear();\n      return this.emit('donePull', true);\n    }\n\n    this.factory.objects.entries.Publish({}, filter).get((err, data) => {\n      for (let i = 0; i < data.length; i++) {\n        this.pool.add((data[i].args.entryId).toString())\n      }\n      this.pull();\n    });\n    this.blockNumber = blockNr;\n  }\n\n  fetchIpfs (hash, entryId) {\n    let response = { title: '', body: '', entryId: entryId };\n    return IpfsConnector.getInstance().api.get(hash)\n      .then((resp) => {\n        response.title = resp.title;\n        return IpfsConnector.getInstance().api.findLinks(hash, ['excerpt']);\n      })\n      .then((resp) => {\n        if (resp.length) {\n          return IpfsConnector.getInstance().api.get(resp[0].multihash)\n        }\n      })\n      .then((final) => {\n        response.body = final;\n        return response;\n      })\n      .catch((err) => {\n        console.log('ERROR ', { hash, entryId }, err);\n      })\n  }\n\n\n  _read () {\n    if (this._index === this.idList.length) {\n      this.push(null);\n    }\n    else {\n      this.factory.objects.entries.getEntry.call(this.idList[this._index], (e, d) => {\n        const entryIpfs = d[2];\n        const resource = this.getHash(entryIpfs);\n        return this.fetchIpfs(resource, this.idList[this._index++]).then((ipfsData) => {\n          if (ipfsData) {\n            let found = false;\n            this.indexS.search({ query: { AND: { title: [ipfsData.title] } } })\n              .on('data', (data) => {\n                if (data.score > 1) {\n                  found = true;\n                }\n              }).on('end', () => {\n              if (!found) {\n                console.log('PUSHING', ipfsData);\n                return this.push(ipfsData);\n              }\n              return this.push({});\n            });\n            return null;\n          }\n          return this.push({});\n        });\n      });\n    }\n  }\n\n  pump () {\n    this.on('donePull', () => {\n      consume(this, this.indexS);\n    });\n  }\n\n  daemonize () {\n    console.log('starting daemon', this.daemonBlock);\n    const watcher = this.factory.objects.entries.Publish({}, { fromBlock: this.daemonBlock, toBlock: 'latest' });\n    watcher.watch((err, published) => {\n      this.factory.objects.entries.getEntry.call((published.args.entryId).toString(), (e, d) => {\n        console.log('indexing entryId', (published.args.entryId).toString());\n        const entryIpfs = d[2];\n        const resource = this.getHash(entryIpfs);\n        return this.fetchIpfs(resource, (published.args.entryId).toString()).then((ipfsData) => {\n          if (ipfsData) {\n            let found = false;\n            this.indexS.search({ query: { AND: { title: [ipfsData.title], body: [ipfsData.body] } } })\n              .on('data', (data) => {\n                if (data.score > 1) {\n                  found = true;\n                }\n              }).on('end', () => {\n              if (!found) {\n                const newIndex = new Readable({ objectMode: true });\n                newIndex.push(ipfsData);\n                newIndex.push(null);\n                consume(newIndex, this.indexS);\n              }\n            });\n          }\n        });\n      });\n    });\n  }\n\n  enableSearch () {\n    console.log(\"Enabling search service\");\n    const filter = this.web3.shh.filter({ topics: [SEARCH_REQUEST], to: getIdentity() });\n    filter.watch((err, message) => {\n      const payload = this.web3.toUtf8(message.payload);\n      let jsonPayload;\n      try {\n        jsonPayload = JSON.parse(payload);\n      } catch (err) {\n        console.log(err);\n      }\n      if (!jsonPayload || !jsonPayload.text) {\n        return;\n      }\n      let response = new Set();\n      this.indexS.totalHits({ query: [{ AND: { '*': [jsonPayload.text] } }] }, (err, count) => {\n        const pageSize = (count > 100) ? 100: count;\n        const offset = (jsonPayload.offset) ? jsonPayload.offset : 0;\n        this.indexS.search({\n          query: [{ AND: { '*': [jsonPayload.text] } }],\n          pageSize: pageSize,\n          offset: offset\n        })\n          .on('data', (data) => {\n            response.add(data.document.entryId);\n          }).on('end', () => {\n          const results = JSON.stringify({ count: response.size, entries: Array.from(response) });\n          const hexResult = this.web3.fromUtf8(results);\n          this.web3.shh\n            .post({\n              from: getIdentity(),\n              to: message.from,\n              topics: [message.payload],\n              payload: hexResult,\n              ttl: this.web3.fromDecimal(10)\n            }, (error, sent) => {\n              if (sent) {\n                console.log('search done for keyword', payload, ' with results ', pageSize);\n              } else {\n                console.error('search error for keyword', payload, error);\n              }\n            });\n          //\n        });\n      });\n    });\n    return null;\n  };\n}\n"]}